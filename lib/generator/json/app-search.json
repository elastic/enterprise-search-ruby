{
  "openapi": "3.0.2",
  "info": {
    "description": "Elastic App Search API",
    "title": "Elastic App Search API",
    "version": "1.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "url": "https://www.elastic.co/guide/en/app-search/current/index.html"
  },
  "components": {
    "parameters": {
      "curationId": {
        "description": "Curation id.",
        "in": "path",
        "name": "curation_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "currentPage": {
        "description": "The page to fetch. Defaults to 1.",
        "in": "query",
        "name": "page[current]",
        "schema": {
          "type": "string"
        },
        "x-codegen-param-name": "currentPage"
      },
      "engineNameParam": {
        "description": "Name of the engine.",
        "in": "path",
        "name": "engine_name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "pageSize": {
        "description": "The number of results per page.",
        "in": "query",
        "name": "page[size]",
        "schema": {
          "type": "string"
        },
        "x-codegen-param-name": "pageSize"
      },
      "searchQueryText": {
        "description": "Search query text.",
        "in": "query",
        "name": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-codegen-param-name": "queryText"
      },
      "synonymSetId": {
        "description": "Synonym set id.",
        "in": "path",
        "name": "synonym_set_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "documentIdsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/documentIds"
            }
          }
        },
        "description": "List of document ids.",
        "required": true
      },
      "documentsIndexingRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/documentList"
            }
          }
        },
        "description": "List of document to index.",
        "required": true
      },
      "documentsPartialUpdateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/documentList"
            }
          }
        },
        "description": "List of document to update.",
        "required": true
      },
      "engineIdsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/documentIds"
            }
          }
        },
        "description": "List of engine ids.",
        "required": true
      },
      "schemaUpdateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/schemaData"
            }
          }
        },
        "description": "Schema description.",
        "required": true
      },
      "searchRequestParams": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/searchRequestParams"
            }
          }
        },
        "description": "Search request parameters."
      },
      "searchSettingsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/searchSettings"
            }
          }
        },
        "description": "Search settings.",
        "required": true
      }
    },
    "responses": {
      "jsonResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/simpleObject"
            }
          }
        },
        "description": "A simple JSON response."
      }
    },
    "schemas": {
      "document": {
        "additionalProperties": {
          "$ref": "#/components/schemas/documentFieldValue"
        },
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "documentFieldValue": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/simpleFieldValue"
          },
          {
            "items": {
              "$ref": "#/components/schemas/simpleFieldValue"
            },
            "type": "array"
          }
        ]
      },
      "documentId": {
        "type": "string"
      },
      "documentIds": {
        "items": {
          "$ref": "#/components/schemas/documentId"
        },
        "type": "array"
      },
      "documentList": {
        "items": {
          "$ref": "#/components/schemas/document"
        },
        "type": "array"
      },
      "schemaData": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "searchBoosts": {
        "type": "object"
      },
      "searchFields": {
        "additionalProperties": {
          "additionalProperties": false,
          "properties": {
            "weight": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "type": "object"
      },
      "searchPageParam": {
        "additionalProperties": false,
        "properties": {
          "current": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "searchRequestList": {
        "items": {
          "$ref": "#/components/schemas/searchRequestParams"
        },
        "type": "array"
      },
      "searchRequestParams": {
        "additionalProperties": false,
        "properties": {
          "analytics": {
            "$ref": "#/components/schemas/simpleObject"
          },
          "boost": {
            "$ref": "#/components/schemas/simpleObject"
          },
          "facets": {
            "$ref": "#/components/schemas/simpleObject"
          },
          "filters": {
            "$ref": "#/components/schemas/simpleObject"
          },
          "group": {
            "$ref": "#/components/schemas/simpleObject"
          },
          "page": {
            "$ref": "#/components/schemas/searchPageParam"
          },
          "query": {
            "type": "string"
          },
          "result_fields": {
            "$ref": "#/components/schemas/simpleObject"
          },
          "search_fields": {
            "$ref": "#/components/schemas/simpleObject"
          },
          "sort": {
            "$ref": "#/components/schemas/simpleObject"
          }
        },
        "type": "object"
      },
      "searchSettings": {
        "additionalProperties": false,
        "properties": {
          "boosts": {
            "$ref": "#/components/schemas/searchBoosts"
          },
          "search_fields": {
            "$ref": "#/components/schemas/searchFields"
          }
        },
        "type": "object"
      },
      "simpleFieldValue": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          }
        ]
      },
      "simpleObject": {
        "type": "object"
      },
      "synonymList": {
        "items": {
          "type": "string"
        },
        "minLength": 2,
        "type": "array"
      }
    }
  },
  "paths": {
    "/api/as/v1/engines": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/engines.html#engines-list"
        },
        "operationId": "listEngines",
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrieves all engines with optional pagination support.",
        "tags": [
          "Engine API"
        ]
      },
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/engines.html#engines-create"
        },
        "operationId": "createEngine",
        "parameters": [
          {
            "description": "Engine name.",
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-codegen-param-name": "engineName"
          },
          {
            "description": "Engine language (null for universal).",
            "in": "query",
            "name": "language",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Engine type.",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "default",
              "type": "string"
            }
          },
          {
            "description": "Sources engines list.",
            "in": "query",
            "name": "source_engines",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Creates a new engine.",
        "tags": [
          "Engine API"
        ],
        "x-operation-scope": "protected"
      }
    },
    "/api/as/v1/engines/{engine_name}": {
      "delete": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/engines.html#engines-delete"
        },
        "operationId": "deleteEngine",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Delete an engine by name.",
        "tags": [
          "Engine API"
        ]
      },
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/engines.html#engines-get"
        },
        "operationId": "getEngine",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrieves an engine by name.",
        "tags": [
          "Engine API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ]
    },
    "/api/as/v1/engines/{engine_name}/analytics/clicks": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/clicks.html"
        },
        "operationId": "getTopClicksAnalytics",
        "parameters": [
          {
            "description": "Filter clicks over a search query.",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "description": "Analytics filters",
            "in": "query",
            "name": "filters",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Returns the number of clicks received by a document in descending order.",
        "tags": [
          "Analytics API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ]
    },
    "/api/as/v1/engines/{engine_name}/analytics/counts": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/counts.html"
        },
        "operationId": "getCountAnalytics",
        "parameters": [
          {
            "description": "Analytics filters",
            "in": "query",
            "name": "filters",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          {
            "description": "You can define an interval along with your date range. Can be either hour or day.",
            "in": "query",
            "name": "interval",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Returns the number of clicks and total number of queries over a period.",
        "tags": [
          "Analytics API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ]
    },
    "/api/as/v1/engines/{engine_name}/analytics/queries": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/queries.html#queries-top-queries"
        },
        "operationId": "getTopQueriesAnalytics",
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },          
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "description": "Analytics filters",
            "in": "query",
            "name": "filters",
            "schema": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Returns queries analytics by usage count.",
        "tags": [
          "Analytics API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ]
    },
    "/api/as/v1/engines/{engine_name}/click": {
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/clickthrough.html"
        },
        "operationId": "logClickthrough",
        "parameters": [
          {
            "$ref": "#/components/parameters/searchQueryText"
          },
          {
            "description": "The id of the document that was clicked on.",
            "in": "query",
            "name": "document_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/documentId"
            }
          },
          {
            "description": "The request id returned in the meta tag of a search API response.",
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Array of strings representing additional information you wish to track with the clickthrough.",
            "in": "query",
            "name": "tags",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Send data about clicked results.",
        "tags": [
          "Click API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/curations": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/curations.html#curations-read"
        },
        "operationId": "listCurations",
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrieve available curations for the engine.",
        "tags": [
          "Curations API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/curations.html#curations-create"
        },
        "operationId": "createCuration",
        "parameters": [
          {
            "description": "List of affected search queries.",
            "in": "query",
            "name": "queries",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of promoted document ids.",
            "in": "query",
            "name": "promoted",
            "schema": {
              "$ref": "#/components/schemas/documentIds"
            },
            "x-codegen-param-name": "promotedDocIds"
          },
          {
            "description": "List of hidden document ids.",
            "in": "query",
            "name": "hidden",
            "schema": {
              "$ref": "#/components/schemas/documentIds"
            },
            "x-codegen-param-name": "hiddenDocIds"
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Create a new curation.",
        "tags": [
          "Curations API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/curations/{curation_id}": {
      "delete": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/curations.html#curations-destroy"
        },
        "operationId": "deleteCuration",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Delete a curation by id.",
        "tags": [
          "Curations API"
        ]
      },
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/curations.html#curations-read"
        },
        "operationId": "getCuration",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrieve a curation by id.",
        "tags": [
          "Curations API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        },
        {
          "$ref": "#/components/parameters/curationId"
        }
      ],
      "put": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/curations.html#curations-update"
        },
        "operationId": "updateCuration",
        "parameters": [
          {
            "description": "List of affected search queries.",
            "in": "query",
            "name": "queries",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of promoted document ids.",
            "in": "query",
            "name": "promoted",
            "schema": {
              "$ref": "#/components/schemas/documentIds"
            },
            "x-codegen-param-name": "promotedDocIds"
          },
          {
            "description": "List of hidden document ids.",
            "in": "query",
            "name": "hidden",
            "schema": {
              "$ref": "#/components/schemas/documentIds"
            },
            "x-codegen-param-name": "hiddenDocIds"
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Update an existing curation.",
        "tags": [
          "Curations API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/documents": {
      "delete": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/documents.html#documents-delete"
        },
        "operationId": "deleteDocuments",
        "requestBody": {
          "$ref": "#/components/requestBodies/documentIdsRequest"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Delete documents by id.",
        "tags": [
          "Documents API"
        ],
        "x-codegen-request-body-name": "documentIds"
      },
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/documents.html#documents-get"
        },
        "operationId": "getDocuments",
        "requestBody": {
          "$ref": "#/components/requestBodies/documentIdsRequest"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrieves one or more documents by id.",
        "tags": [
          "Documents API"
        ],
        "x-codegen-request-body-name": "documentIds"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "patch": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/documents.html#documents-partial"
        },
        "operationId": "updateDocuments",
        "requestBody": {
          "$ref": "#/components/requestBodies/documentsPartialUpdateRequest"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Partial update of documents.",
        "tags": [
          "Documents API"
        ],
        "x-codegen-request-body-name": "documents"
      },
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/documents.html#documents-create"
        },
        "operationId": "indexDocuments",
        "requestBody": {
          "$ref": "#/components/requestBodies/documentsIndexingRequest"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Create or update documents.",
        "tags": [
          "Documents API"
        ],
        "x-codegen-request-body-name": "documents"
      }
    },
    "/api/as/v1/engines/{engine_name}/documents/list": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/documents.html#documents-list"
        },
        "operationId": "listDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "List all available documents with optional pagination support.",
        "tags": [
          "Documents API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ]
    },
    "/api/as/v1/engines/{engine_name}/logs/api": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/api-logs.html"
        },
        "operationId": "getApiLogs",
        "parameters": [
          {
            "description": "Filter date from.",
            "in": "query",
            "name": "filters[date][from]",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-codegen-param-name": "fromDate"
          },
          {
            "description": "Filter date to.",
            "in": "query",
            "name": "filters[date][to]",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-codegen-param-name": "toDate"
          },
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "description": "Use this to specify a particular endpoint, like analytics, search, curations and so on.",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter based on a particular status code: 400, 401, 403, 429, 200.",
            "in": "query",
            "name": "filters[status]",
            "schema": {
              "type": "string"
            },
            "x-codegen-param-name": "httpStatusFilter"
          },
          {
            "description": "Filter based on a particular HTTP method: GET, POST, PUT, PATCH, DELETE.",
            "in": "query",
            "name": "filters[method]",
            "schema": {
              "type": "string"
            },
            "x-codegen-param-name": "httpMethodFilter"
          },
          {
            "description": "Would you like to have your results ascending, oldest to newest, or descending, newest to oldest?",
            "in": "query",
            "name": "sort_direction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "The API Log displays API request and response data at the Engine level.",
        "tags": [
          "Logs API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ]
    },
    "/api/as/v1/engines/{engine_name}/multi_search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/search.html#search-multi"
        },
        "operationId": "multiSearch",
        "parameters": [
          {
            "description": "Search queries.",
            "in": "query",
            "name": "queries",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/searchRequestList"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Run several search in the same request.",
        "tags": [
          "Search API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/query_suggestion": {
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/query-suggestion.html"
        },
        "operationId": "querySuggestion",
        "parameters": [
          {
            "description": "A partial query for which to receive suggestions.",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of fields to use to generate suggestions. Defaults to all text fields.",
            "in": "query",
            "name": "types[documents][fields]",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "x-codegen-param-name": "fields"
          },
          {
            "description": "Number of query suggestions to return. Must be between 1 and 20. Defaults to 5.",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Provide relevant query suggestions for incomplete queries.",
        "tags": [
          "Query suggestion API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/schema": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/schema.html#schema-read"
        },
        "operationId": "getSchema",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrieve current schema for then engine.",
        "tags": [
          "Schema API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/schema.html#schema-patch"
        },
        "operationId": "updateSchema",
        "requestBody": {
          "$ref": "#/components/requestBodies/schemaUpdateRequest"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Update schema for the current engine.",
        "tags": [
          "Schema API"
        ],
        "x-codegen-request-body-name": "schema"
      }
    },
    "/api/as/v1/engines/{engine_name}/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/search.html#search-single"
        },
        "operationId": "search",
        "requestBody": {
          "$ref": "#/components/requestBodies/searchRequestParams"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Allows you to search over, facet and filter your data.",
        "tags": [
          "Search API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/search_settings": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/search-settings.html#search-settings-show"
        },
        "operationId": "getSearchSettings",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrive current search settings for the engine.",
        "tags": [
          "Search settings API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "put": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/search-settings.html#search-settings-update"
        },
        "operationId": "updateSearchSettings",
        "requestBody": {
          "$ref": "#/components/requestBodies/searchSettingsRequest"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Update search settings for the engine.",
        "tags": [
          "Search settings API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/search_settings/reset": {
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/search-settings.html#search-settings-reset"
        },
        "operationId": "resetSearchSettings",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Reset search settings for the engine.",
        "tags": [
          "Search settings API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/source_engines": {
      "delete": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/meta-engines.html#meta-engines-remove-source-engines"
        },
        "operationId": "deleteMetaEngineSource",
        "requestBody": {
          "$ref": "#/components/requestBodies/engineIdsRequest"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Delete a source engine from a meta engine.",
        "tags": [
          "Engine API"
        ],
        "x-codegen-request-body-name": "sourceEngines"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/meta-engines.html#meta-engines-add-source-engines"
        },
        "operationId": "addMetaEngineSource",
        "requestBody": {
          "$ref": "#/components/requestBodies/engineIdsRequest"
        },
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Add a source engine to an existing meta engine.",
        "tags": [
          "Engine API"
        ],
        "x-codegen-request-body-name": "sourceEngines"
      }
    },
    "/api/as/v1/engines/{engine_name}/synonyms": {
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/synonyms.html#synonyms-get"
        },
        "operationId": "listSynonymSets",
        "parameters": [
          {
            "$ref": "#/components/parameters/currentPage"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrieve available synonym sets for the engine.",
        "tags": [
          "Synonyms API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        }
      ],
      "post": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/synonyms.html#synonyms-create"
        },
        "operationId": "createSynonymSet",
        "parameters": [
          {
            "description": "List of synonyms words.",
            "in": "query",
            "name": "synonyms",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/synonymList"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Create a new synonym set.",
        "tags": [
          "Synonyms API"
        ]
      }
    },
    "/api/as/v1/engines/{engine_name}/synonyms/{synonym_set_id}": {
      "delete": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/synonyms.html#synonyms-delete"
        },
        "operationId": "deleteSynonymSet",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Delete a synonym set by id.",
        "tags": [
          "Synonyms API"
        ]
      },
      "get": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/synonyms.html#synonyms-list-one"
        },
        "operationId": "getSynonymSet",
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Retrieve a synonym set by id.",
        "tags": [
          "Synonyms API"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/engineNameParam"
        },
        {
          "$ref": "#/components/parameters/synonymSetId"
        }
      ],
      "put": {
        "externalDocs": {
          "url": "https://www.elastic.co/guide/en/app-search/current/synonyms.html#synonyms-update"
        },
        "operationId": "updateSynonymSet",
        "parameters": [
          {
            "description": "List of synonyms words.",
            "in": "query",
            "name": "synonyms",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/synonymList"
            }
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/jsonResponse"
          }
        },
        "summary": "Update a synonym set by id.",
        "tags": [
          "Synonyms API"
        ]
      }
    }
  }
}
